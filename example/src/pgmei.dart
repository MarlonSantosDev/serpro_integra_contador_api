import 'package:serpro_integra_contador_api/serpro_integra_contador_api.dart';

Future<void> Pgmei(ApiClient apiClient) async {
  print('=== Exemplos PGMEI ===');

  final pgmeiService = PgmeiService(apiClient);
  bool servicoOk = true;

  // 1. Gerar DAS Padr√£o
  try {
    print('\n--- 1. Gerar DAS Padr√£o ---');
    final response = await pgmeiService.gerarDas('00000000000100', '202310');
    print('‚úÖ DAS gerado com sucesso Padr√£o');

    if (response.dados.isNotEmpty) {
      final das = response.dados.first;
      print('üí∞ Valor total do DAS: R\$ ${das.detalhamento.valores.total}');
    }
  } catch (e) {
    print('‚ùå Erro ao gerar DAS padr√£o: $e');
    servicoOk = false;
  }
  await Future.delayed(const Duration(seconds: 5));

  // 2. Gerar DAS com C√≥digo de Barras
  try {
    print('\n--- 2. Gerar DAS com C√≥digo de Barras ---');
    final response = await pgmeiService.gerarDasCodigoDeBarras('00000000000100', '202310');
    print('‚úÖ DAS gerado com sucesso C√≥digo de Barras');

    if (response.dados.isNotEmpty) {
      final das = response.dados.first;
      print('üí∞ Valor total do DAS: R\$ ${das.detalhamento.valores.total}');
    }
  } catch (e) {
    print('‚ùå Erro ao gerar DAS com c√≥digo de barras: $e');
    servicoOk = false;
  }
  await Future.delayed(const Duration(seconds: 5));

  // 3. Atualizar Benef√≠cio
  try {
    print('\n--- 3. Atualizar Benef√≠cio ---');
    final response = await pgmeiService.atualizarBeneficio('00000000000100', '202310');
    print('‚úÖ Benef√≠cio atualizado com sucesso');

    if (response.dados.isNotEmpty) {
      print("üìã Response: ${response.dados.first.toJson()}");
    }
  } catch (e) {
    print('‚ùå Erro ao atualizar benef√≠cio: $e');
    servicoOk = false;
  }
  await Future.delayed(const Duration(seconds: 5));

  // 4. Consultar D√≠vida Ativa
  try {
    print('\n--- 4. Consultar D√≠vida Ativa ---');
    final response = await pgmeiService.consultarDividaAtiva('00000000000100', '2020');
    print('‚úÖ Consulta de d√≠vida ativa realizada com sucesso');

    if (response.dados.isNotEmpty) {
      final das = response.dados.first;
      print('üí∞ Valor total do DAS: R\$ ${das.detalhamento.valores.total}');
    }
  } catch (e) {
    print('‚ùå Erro ao consultar d√≠vida ativa: $e');
    servicoOk = false;
  }
  await Future.delayed(const Duration(seconds: 5));

  // Resumo final
  print('\n=== RESUMO DO SERVI√áO PGMEI ===');
  if (servicoOk) {
    print('‚úÖ Servi√ßo PGMEI: OK');
  } else {
    print('‚ùå Servi√ßo PGMEI: ERRO');
  }

  print('\nüéâ Todos os servi√ßos PGMEI executados!');
}

import 'package:serpro_integra_contador_api/serpro_integra_contador_api.dart';

/// Exemplos de uso do servi√ßo de Regime de Apura√ß√£o
Future<void> Regime(ApiClient apiClient) async {
  print('\n=== SERVI√áO DE REGIME DE APURA√á√ÉO ===');

  // Inicializar o servi√ßo
  final regimeService = RegimeApuracaoService(apiClient);
  bool servicoOk = true;

  // 1. Efetuar op√ß√£o pelo regime de compet√™ncia
  try {
    print('\n1. Efetuando op√ß√£o pelo regime de compet√™ncia (comentado)...');
    print('C√≥digo comentado para evitar execu√ß√£o real:');
    final requestCompetencia = EfetuarOpcaoRegimeRequest.competencia(anoOpcao: 2024);
    final opcaoCompetenciaResponse = await regimeService.efetuarOpcaoRegime(contribuinteNumero: '00000000000000', request: requestCompetencia);
    if (opcaoCompetenciaResponse.isSuccess) {
      print("‚úÖ Op√ß√£o pelo regime de compet√™ncia efetivada com sucesso!");
      if (opcaoCompetenciaResponse.dados != null) {
        final dados = opcaoCompetenciaResponse.dados!;
        print("Regime escolhido: ${dados.regimeEscolhido}");
        print("Data da op√ß√£o: ${dados.dataOpcao}");
      }
    }
    print('‚úÖ Exemplo documentado (n√£o executado)');
  } catch (e) {
    print('‚ùå Erro no exemplo comentado: $e');
    servicoOk = false;
  }

  // 2. Consultar anos calend√°rios com op√ß√µes efetivadas
  try {
    print('\n2. Consultando anos calend√°rios com op√ß√µes efetivadas...');
    final anosResponse = await regimeService.consultarAnosCalendarios(contribuinteNumero: '00000000000000');

    if (anosResponse.isSuccess) {
      print('‚úÖ Consulta de anos realizada com sucesso!');
      if (anosResponse.hasData) {
        print('Anos com op√ß√µes efetivadas:');
        for (final ano in anosResponse.dados!) {
          print('  - ${ano.anoCalendario}: ${ano.regimeApurado}');
        }
      } else {
        print('Nenhuma op√ß√£o de regime encontrada.');
      }
    } else {
      print('‚ùå Erro na consulta de anos:');
      for (final mensagem in anosResponse.mensagens) {
        print('  ${mensagem.codigo}: ${mensagem.texto}');
      }
    }
  } catch (e) {
    print('‚ùå Erro ao consultar anos calend√°rios: $e');
    servicoOk = false;
  }

  // 4. Consultar op√ß√£o espec√≠fica para um ano
  try {
    print('\n3. Consultando op√ß√£o espec√≠fica para o ano 2023...');
    final requestOpcao = ConsultarOpcaoRegimeRequest(anoCalendario: 2023);
    final opcaoResponse = await regimeService.consultarOpcaoRegime(contribuinteNumero: '00000000000000', request: requestOpcao);

    if (opcaoResponse.isSuccess) {
      print('‚úÖ Consulta de op√ß√£o realizada com sucesso!');
      if (opcaoResponse.hasData) {
        final dados = opcaoResponse.dados!;
        print('Dados da op√ß√£o:');
        print('  - CNPJ Matriz: ${dados.cnpjMatriz}');
        print('  - Ano Calend√°rio: ${dados.anoCalendario}');
        print('  - Regime Escolhido: ${dados.regimeEscolhido}');
        print('  - Data/Hora Op√ß√£o: ${dados.dataOpcao}');
        print('  - Tem Demonstrativo PDF: ${dados.hasDemonstrativoPdf}');
        print('  - Tem Texto Resolu√ß√£o: ${dados.hasTextoResolucao}');
      } else {
        print('Nenhuma op√ß√£o encontrada para o ano 2023.');
      }
    } else {
      print('‚ùå Erro na consulta de op√ß√£o:');
      for (final mensagem in opcaoResponse.mensagens) {
        print('  ${mensagem.codigo}: ${mensagem.texto}');
      }
    }
  } catch (e) {
    print('‚ùå Erro ao consultar op√ß√£o por ano: $e');
    servicoOk = false;
  }

  // 5. Consultar resolu√ß√£o para regime de caixa
  try {
    print('\n4. Consultando resolu√ß√£o para regime de caixa (ano 2021)...');
    final requestResolucao = ConsultarResolucaoRequest(anoCalendario: 2021);
    final resolucaoResponse = await regimeService.consultarResolucao(contribuinteNumero: '00000000000000', request: requestResolucao);

    if (resolucaoResponse.isSuccess) {
      print('‚úÖ Consulta de resolu√ß√£o realizada com sucesso!');
      if (resolucaoResponse.hasData) {
        final dados = resolucaoResponse.dados!;
        print('Resolu√ß√£o dispon√≠vel: ${dados.hasTextoResolucao}');
        if (dados.hasTextoResolucao) {
          print('Texto da resolu√ß√£o (primeiros 100 caracteres):');
          print('  ${dados.textoResolucao.substring(0, dados.textoResolucao.length > 100 ? 100 : dados.textoResolucao.length)}...');
        }
      } else {
        print('Nenhuma resolu√ß√£o encontrada para o ano 2021.');
      }
    } else {
      print('‚ùå Erro na consulta de resolu√ß√£o:');
      for (final mensagem in resolucaoResponse.mensagens) {
        print('  ${mensagem.codigo}: ${mensagem.texto}');
      }
    }
  } catch (e) {
    print('‚ùå Erro ao consultar resolu√ß√£o: $e');
    servicoOk = false;
  }

  // Resumo dos m√©todos utilizados
  print('\n=== RESUMO DOS M√âTODOS UTILIZADOS ===');
  print('‚úÖ M√©todos executados (consultas):');
  print('  1. efetuarOpcaoRegime() - Efetua op√ß√£o pelo regime de compet√™ncia');
  print('  2. consultarAnosCalendarios() - Consulta todos os anos com op√ß√µes');
  print('  3. consultarOpcaoRegime() - Consulta op√ß√£o espec√≠fica por ano');
  print('  4. consultarResolucao() - Consulta resolu√ß√£o para regime de caixa');
  print('');
  print('üìã Todos os 4 m√©todos principais do RegimeApuracaoService foram demonstrados!');

  // Resumo final
  print('\n=== RESUMO DO SERVI√áO REGIME DE APURA√á√ÉO ===');
  if (servicoOk) {
    print('‚úÖ Servi√ßo REGIME DE APURA√á√ÉO: OK');
  } else {
    print('‚ùå Servi√ßo REGIME DE APURA√á√ÉO: ERRO');
  }

  print('\n=== FIM DOS EXEMPLOS DE REGIME DE APURA√á√ÉO ===');
}

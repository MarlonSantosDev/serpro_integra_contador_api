import 'package:serpro_integra_contador_api/serpro_integra_contador_api.dart';

Future<void> Ccmei(ApiClient apiClient) async {
  print('=== Exemplos CCMEI ===');

  final ccmeiService = CcmeiService(apiClient);
  bool servicoOk = true;

  // 1. Emitir CCMEI (PDF)
  try {
    print('\n--- 1. Emitir CCMEI (PDF) ---');
    final emitirResponse = await ccmeiService.emitirCcmei(
      '00000000000000',
      contratanteNumero: '00000000000000',
      autorPedidoDadosNumero: '00000000000000',
    );
    print('‚úÖ Status: ${emitirResponse.status}');
    print('üìã Mensagens: ${emitirResponse.mensagens.map((m) => '${m.codigo}: ${m.texto}').join(', ')}');
    print('üè¢ CNPJ: ${emitirResponse.dados.cnpj}');
    print('üìÑ PDF gerado: ${emitirResponse.dados.pdf.isNotEmpty ? 'Sim' : 'N√£o'}');
    print('üìè Tamanho do PDF: ${emitirResponse.dados.pdf.length} caracteres');
    final sucessoSalvamento = await PdfFileUtils.salvarArquivo(
      emitirResponse.dados.pdf,
      'relatorio_ccmei_${DateTime.now().millisecondsSinceEpoch}.pdf',
    );
    print('PDF salvo em arquivo: ${sucessoSalvamento ? 'Sim' : 'N√£o'}');
  } catch (e) {
    print('‚ùå Erro ao emitir CCMEI: $e');
    servicoOk = false;
  }
  await Future.delayed(Duration(seconds: 5));

  // 2. Consultar Dados CCMEI
  try {
    print('\n--- 2. Consultar Dados CCMEI ---');
    final consultarResponse = await ccmeiService.consultarDadosCcmei(
      '00000000000000',
      contratanteNumero: '00000000000000',
      autorPedidoDadosNumero: '00000000000000',
    );
    print('‚úÖ Status: ${consultarResponse.status}');
    print('üìã Mensagens: ${consultarResponse.mensagens.map((m) => '${m.codigo}: ${m.texto}').join(', ')}');
    print('üè¢ CNPJ: ${consultarResponse.dados.cnpj}');
    print('üìù Nome Empresarial: ${consultarResponse.dados.nomeEmpresarial}');
    print('üë§ Empres√°rio: ${consultarResponse.dados.empresario.nomeCivil}');
    print('üÜî CPF Empres√°rio: ${consultarResponse.dados.empresario.cpf}');
    print('üìÖ Data In√≠cio Atividades: ${consultarResponse.dados.dataInicioAtividades}');
    print('üìä Situa√ß√£o Cadastral: ${consultarResponse.dados.situacaoCadastralVigente}');
    print('üí∞ Capital Social: R\$ ${consultarResponse.dados.capitalSocial}');
    print('üìç Endere√ßo: ${consultarResponse.dados.enderecoComercial.logradouro}, ${consultarResponse.dados.enderecoComercial.numero}');
    print('üèòÔ∏è Bairro: ${consultarResponse.dados.enderecoComercial.bairro}');
    print('üèôÔ∏è Munic√≠pio: ${consultarResponse.dados.enderecoComercial.municipio}/${consultarResponse.dados.enderecoComercial.uf}');
    print('üìÆ CEP: ${consultarResponse.dados.enderecoComercial.cep}');
    print('üè™ Enquadramento MEI: ${consultarResponse.dados.enquadramento.optanteMei ? 'Sim' : 'N√£o'}');
    print('üìà Situa√ß√£o Enquadramento: ${consultarResponse.dados.enquadramento.situacao}');
    print('üìÖ Per√≠odos MEI: ${consultarResponse.dados.enquadramento.periodosMei.length} per√≠odo(s)');
    for (var periodo in consultarResponse.dados.enquadramento.periodosMei) {
      print('  - Per√≠odo ${periodo.indice}: ${periodo.dataInicio} at√© ${periodo.dataFim ?? 'atual'}');
    }
    print('üíº Formas de Atua√ß√£o: ${consultarResponse.dados.atividade.formasAtuacao.join(', ')}');
    print('üéØ Ocupa√ß√£o Principal: ${consultarResponse.dados.atividade.ocupacaoPrincipal.descricaoOcupacao}');
    if (consultarResponse.dados.atividade.ocupacaoPrincipal.codigoCNAE != null) {
      print(
        'üè∑Ô∏è CNAE Principal: ${consultarResponse.dados.atividade.ocupacaoPrincipal.codigoCNAE} - ${consultarResponse.dados.atividade.ocupacaoPrincipal.descricaoCNAE}',
      );
    }
    print('üìã Ocupa√ß√µes Secund√°rias: ${consultarResponse.dados.atividade.ocupacoesSecundarias.length}');
    for (var ocupacao in consultarResponse.dados.atividade.ocupacoesSecundarias) {
      print('  - ${ocupacao.descricaoOcupacao}');
      if (ocupacao.codigoCNAE != null) {
        print('    CNAE: ${ocupacao.codigoCNAE} - ${ocupacao.descricaoCNAE}');
      }
    }
    print('üìÑ Termo Ci√™ncia Dispensa: ${consultarResponse.dados.termoCienciaDispensa.titulo}');
    print('üì± QR Code dispon√≠vel: ${consultarResponse.dados.qrcode != null ? 'Sim' : 'N√£o'}');
    if (consultarResponse.dados.qrcode != null) {
      final sucessoSalvamento = await PdfFileUtils.salvarArquivo(
        consultarResponse.dados.qrcode!,
        'qrcode_ccmei_${DateTime.now().millisecondsSinceEpoch}.pdf',
      );
      print('PDF salvo em arquivo: ${sucessoSalvamento ? 'Sim' : 'N√£o'}');
    }
  } catch (e) {
    print('‚ùå Erro ao consultar dados CCMEI: $e');
    servicoOk = false;
  }
  await Future.delayed(Duration(seconds: 5));

  // 3. Consultar Situa√ß√£o Cadastral por CPF
  try {
    print('\n--- 3. Consultar Situa√ß√£o Cadastral por CPF ---');
    final situacaoResponse = await ccmeiService.consultarSituacaoCadastral(
      '00000000000000',
      contratanteNumero: '00000000000000',
      autorPedidoDadosNumero: '00000000000000',
    );
    print('‚úÖ Status: ${situacaoResponse.status}');
    print('üìã Mensagens: ${situacaoResponse.mensagens.map((m) => '${m.codigo}: ${m.texto}').join(', ')}');
    print('üîç CNPJs encontrados: ${situacaoResponse.dados.length}');
    for (var situacao in situacaoResponse.dados) {
      print('  - CNPJ: ${situacao.cnpj}');
      print('    Situa√ß√£o: ${situacao.situacao}');
      print('    Enquadrado MEI: ${situacao.enquadradoMei ? 'Sim' : 'N√£o'}');
    }
  } catch (e) {
    print('‚ùå Erro ao consultar situa√ß√£o cadastral: $e');
    servicoOk = false;
  }

  // Resumo final
  print('\n=== RESUMO DO SERVI√áO CCMEI ===');
  if (servicoOk) {
    print('‚úÖ Servi√ßo CCMEI: OK');
  } else {
    print('‚ùå Servi√ßo CCMEI: ERRO');
  }

  print('\n=== Exemplos CCMEI Conclu√≠dos ===');
}

import '../lib/integra_contador_api.dart';

/// Exemplo de uso da API Integra Contador no ambiente de demonstra√ß√£o (trial)
/// para os servi√ßos do DEFIS (Declara√ß√£o de Informa√ß√µes Socioecon√¥micas e Fiscais)
void main() async {
  // 1. Configura√ß√£o do servi√ßo para o ambiente de demonstra√ß√£o
  // Usando o m√©todo createTrialService que j√° configura a URL correta e a chave de teste
  final service = IntegraContadorFactory.createTrialService();

  print('üöÄ Iniciando exemplos da API Integra Contador - DEFIS (Ambiente de Demonstra√ß√£o)\n');

  // 2. Teste de conectividade
  await _testarConectividade(service);

  // 3. Consulta de declara√ß√µes DEFIS
  await _exemploConsultaDeclaracoesDEFIS(service);

  // 4. Consultar √∫ltima declara√ß√£o DEFIS
  await _exemploConsultarUltimaDeclaracaoDEFIS(service);

  // 5. Consultar declara√ß√£o DEFIS espec√≠fica
  await _exemploConsultarDeclaracaoDEFIS(service);

  // 6. Limpeza de recursos
  service.dispose();

  print('\n‚ú® Todos os exemplos foram executados!');
}

/// Testa a conectividade com a API
Future<void> _testarConectividade(IntegraContadorExtendedService service) async {
  print('=== Teste de Conectividade ===');

  final result = await service.testarConectividade();

  if (result.isSuccess) {
    print('‚úÖ Conectividade OK');
  } else {
    print('‚ùå Falha na conectividade: ${result.error?.message}');
  }
  print('');
}

/// Exemplo de consulta de declara√ß√µes DEFIS
Future<void> _exemploConsultaDeclaracoesDEFIS(IntegraContadorExtendedService service) async {
  print('=== Consulta de Declara√ß√µes DEFIS ===');

  final result = await service.consultarDeclaracoesDEFIS(documento: '00000000000000', anoCalendario: '2018');

  if (result.isSuccess) {
    print('‚úÖ Consulta realizada com sucesso!');

    final dados = result.data?.dados;
    if (dados != null) {
      print('Declara√ß√µes encontradas: ${dados['declaracoes']?.length ?? 0}');

      final declaracoes = dados['declaracoes'] as List<dynamic>?;
      if (declaracoes != null && declaracoes.isNotEmpty) {
        print('\nPrimeira declara√ß√£o:');
        print('N√∫mero: ${declaracoes[0]['numeroDeclaracao']}');
        print('Ano Calend√°rio: ${declaracoes[0]['anoCalendario']}');
        print('Data: ${declaracoes[0]['dataHoraTransmissao']}');
      }
    } else {
      print('‚ùå Nenhuma declara√ß√£o encontrada ${result}');
    }
  } else {
    print('‚ùå Erro na consulta: ${result.error?.message}');
  }
  print('');
}

/// Exemplo de consulta da √∫ltima declara√ß√£o DEFIS
Future<void> _exemploConsultarUltimaDeclaracaoDEFIS(IntegraContadorExtendedService service) async {
  print('=== Consulta da √öltima Declara√ß√£o DEFIS ===');

  final result = await service.consultarUltimaDeclaracaoDEFIS(documento: '00000000000000', anoCalendario: '2018');

  if (result.isSuccess) {
    print('‚úÖ Consulta realizada com sucesso!');

    final dados = result.data?.dados;
    if (dados != null) {
      print('N√∫mero da Declara√ß√£o: ${dados['numeroDeclaracao']}');
      print('Ano Calend√°rio: ${dados['anoCalendario']}');
      print('Data/Hora Transmiss√£o: ${dados['dataHoraTransmissao']}');
      print('Recibo: ${dados['recibo']}');
    }
  } else {
    print('‚ùå Erro na consulta: ${result.error?.message}');
  }
  print('');
}

/// Exemplo de consulta de declara√ß√£o DEFIS espec√≠fica
Future<void> _exemploConsultarDeclaracaoDEFIS(IntegraContadorExtendedService service) async {
  print('=== Consulta de Declara√ß√£o DEFIS Espec√≠fica ===');

  final result = await service.consultarDeclaracaoReciboDEFIS(documento: '00000000000000', numeroDeclaracao: '00000000201801');

  if (result.isSuccess) {
    print('‚úÖ Consulta realizada com sucesso!');

    final dados = result.data?.dados;
    if (dados != null) {
      print('N√∫mero da Declara√ß√£o: ${dados['numeroDeclaracao']}');
      print('Ano Calend√°rio: ${dados['anoCalendario']}');
      print('Data/Hora Transmiss√£o: ${dados['dataHoraTransmissao']}');
      print('Recibo: ${dados['recibo']}');

      // Informa√ß√µes adicionais espec√≠ficas do DEFIS
      print('\nInforma√ß√µes Socioecon√¥micas:');
      print('Receita Bruta Total: R\$ ${dados['receitaBrutaTotal']}');
      print('Quantidade de Empregados: ${dados['quantidadeEmpregados']}');
      print('Capital Social: R\$ ${dados['capitalSocial']}');
    }
  } else {
    print('‚ùå Erro na consulta: ${result.error?.message}');
  }
  print('');
}
